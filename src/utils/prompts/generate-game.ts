import { type z } from "zod";
import { type GenerateGameSchema } from "~/components/play/form-schema";
import { lines } from "../strings";

const SEPARATOR = "\n\n";

const barGamesExamples = () => {
  const footballGame = lines([
    "The game is a soccer / football match:",
    "A player names a soccer / football player that is currently playing match.",
    "Everytime named player has the ball in possession, player who chose him/her has to drink.",
  ]);

  const spyfallGame = lines([
    "The game is a round of Spyfall:",
    "Each player is given a word.",
    "One player is the spy and does not know the word.",
    "Players take turns asking each other questions to figure out who the spy is.",
    "If the spy guesses the word, they win.",
  ]);

  return lines([footballGame, SEPARATOR, spyfallGame]);
};

export const getGenerateGamePrompt = ({
  location,
  amountOfPlayers,
  minimumAge,
  duration,
  props,
  customInstructions,
}: z.infer<typeof GenerateGameSchema>) => {
  let prompt = `Generate a game for ${amountOfPlayers} players that is ${duration} minutes long. Design the game be played in a ${location}.`;

  if (location === "bar") {
    prompt += ` Here are some examples of bar games: ${barGamesExamples()} \n\n`;
    prompt +=
      "Ensure that the game is witty, engaging, easy going and involves drinking. \n";
    prompt += "Ensure that the game involves least amount of creative thinking as possible. If there are questions to be asked, they should be generated by you, players do not have to think about generating questions. \n"
  }

  if (minimumAge) {
    prompt += ` The game should be suitable for players over the age of ${minimumAge}. \n`;
  }

  if (props) {
    prompt += ` The game should include the following props: ${props}. \n`;
  }

  if (customInstructions) {
    prompt += ` ${customInstructions}`;
  }

  return prompt;
};
